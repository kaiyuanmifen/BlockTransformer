library(ggplot2)
Data=read.csv("../../MARL_Results.csv",header = F)
tail(Data)
names(Data)=c("Data","N_agents","Method","Episode","trainReward","testReward","OODtestReward","ExtraLoss")
#names(Data)=c("Data","N_agents","Method","Episode",
#             "trainReward","testReward","OODtestReward","CBLoss",
#            "AllAttScores_train","AllAttScores_test","AllAttScores_OODtest")
tail(Data)
Data=Data[Data$N_agents%in%c("1","5","20"),]
unique(Data$N_agents)
N_agent=3
names(Data)
unique(Data$N_agents)
data="Drone"
Data$testReward=as.numeric(Data$testReward)
Data$OODtestReward=as.numeric(Data$OODtestReward)
head(Data)
tail(Data)
table(Data$trainReward)
VecPlot=Data[(!is.na(Data$Episode))&(Data$Episode>=00)&(Data$N_agents==N_agent),]
tail(VecPlot)
setwd("C:/Users/kaiyu/Google Drive/research/MILA/AdaptiveBottlenecking/Stage7/MARLEnv_set")
#organize data and plot
library(ggplot2)
Data=read.csv("../../MARL_Results.csv",header = F)
tail(Data)
names(Data)=c("Data","N_agents","Method","Episode","trainReward","testReward","OODtestReward","ExtraLoss")
#names(Data)=c("Data","N_agents","Method","Episode",
#             "trainReward","testReward","OODtestReward","CBLoss",
#            "AllAttScores_train","AllAttScores_test","AllAttScores_OODtest")
tail(Data)
unique(Data$N_agents)
N_agent=3
names(Data)
unique(Data$N_agents)
data="Drone"
Data$testReward=as.numeric(Data$testReward)
Data$OODtestReward=as.numeric(Data$OODtestReward)
head(Data)
tail(Data)
table(Data$trainReward)
VecPlot=Data[(!is.na(Data$Episode))&(Data$Episode>=00)&(Data$N_agents==N_agent),]
tail(VecPlot)
table(VecPlot$OODtestReward)
unique(VecPlot$testReward)
unique(VecPlot$Episode)
VecPlot$Episode=as.numeric(VecPlot$Episode)
ggplot(data = VecPlot, aes(x=Episode, y=testReward)) +
geom_line()+scale_color_brewer(palette="Paired")
ggplot(data = VecPlot, aes(x=Episode, y=trainReward)) +
geom_line()+scale_color_brewer(palette="Paired")
ggplot(data = VecPlot, aes(x=Episode, y=OODtestReward)) +
geom_line()+scale_color_brewer(palette="Paired")
ggplot(data = VecPlot, aes(x=Episode, y=testReward)) +
geom_smooth(size=2)+scale_color_brewer(palette="Paired")
ggplot(data = VecPlot, aes(x=Episode, y=trainReward)) +
geom_smooth(size=2)+scale_color_brewer(palette="Paired")
ggplot(data = VecPlot, aes(x=Episode, y=OODtestReward)) +
geom_smooth(size=2)+scale_color_brewer(palette="Paired")
ggplot(data = VecPlot, aes(x=Episode, y=testReward,color=Method)) +
geom_smooth(size=2)+ggtitle(paste0(data," N_agents:",N_agent))
ggplot(data = VecPlot, aes(x=Episode, y=trainReward,color=Method)) +
geom_smooth(size=2)+ggtitle(paste0(data," N_agents:",N_agent))
ggplot(data = VecPlot, aes(x=Episode, y=OODtestReward,color=Method)) +
geom_smooth(size=2)+ggtitle(paste0(data," N_agents:",N_agent))
Data=read.csv("../../MARL_Results.csv",header = F)
tail(Data)
names(Data)=c("Data","N_agents","Method","Episode","trainReward","testReward","OODtestReward","ExtraLoss")
#names(Data)=c("Data","N_agents","Method","Episode",
#             "trainReward","testReward","OODtestReward","CBLoss",
#            "AllAttScores_train","AllAttScores_test","AllAttScores_OODtest")
tail(Data)
#Data=Data[Data$N_agents%in%c("1","5","20"),]
unique(Data$N_agents)
N_agent=5
names(Data)
unique(Data$N_agents)
data="Drone"
Data$testReward=as.numeric(Data$testReward)
Data$OODtestReward=as.numeric(Data$OODtestReward)
head(Data)
tail(Data)
table(Data$trainReward)
VecPlot=Data[(!is.na(Data$Episode))&(Data$Episode>=00)&(Data$N_agents==N_agent),]
tail(VecPlot)
table(VecPlot$OODtestReward)
unique(VecPlot$testReward)
unique(VecPlot$Episode)
VecPlot$Episode=as.numeric(VecPlot$Episode)
ggplot(data = VecPlot, aes(x=Episode, y=testReward)) +
geom_line()+scale_color_brewer(palette="Paired")
ggplot(data = VecPlot, aes(x=Episode, y=trainReward)) +
geom_line()+scale_color_brewer(palette="Paired")
ggplot(data = VecPlot, aes(x=Episode, y=OODtestReward)) +
geom_line()+scale_color_brewer(palette="Paired")
ggplot(data = VecPlot, aes(x=Episode, y=testReward)) +
geom_smooth(size=2)+scale_color_brewer(palette="Paired")
ggplot(data = VecPlot, aes(x=Episode, y=trainReward)) +
geom_smooth(size=2)+scale_color_brewer(palette="Paired")
ggplot(data = VecPlot, aes(x=Episode, y=OODtestReward)) +
geom_smooth(size=2)+scale_color_brewer(palette="Paired")
ggplot(data = VecPlot, aes(x=Episode, y=testReward,color=Method)) +
geom_smooth(size=2)+ggtitle(paste0(data," N_agents:",N_agent))
ggplot(data = VecPlot, aes(x=Episode, y=trainReward,color=Method)) +
geom_smooth(size=2)+ggtitle(paste0(data," N_agents:",N_agent))
ggplot(data = VecPlot, aes(x=Episode, y=OODtestReward,color=Method)) +
geom_smooth(size=2)+ggtitle(paste0(data," N_agents:",N_agent))
setwd("C:/Users/kaiyu/Google Drive/research/MILA/AdaptiveBottlenecking/Stage7/minigrid")
Data=read.csv("ExperimentalResults.csv")
head(Data)
Data=read.csv("ExperimentalResults.csv",header = F)
head(Data)
names(Data)
names(Data)=c("Task","num_frames","fps","duration","return_per_episode","num_frames_per_episode")
head(Data$return_per_episode)
Data=read.csv("ExperimentalResults.csv",header = F,sep = "[,]|[ ]")
Data=read.csv("ExperimentalResults.csv",header = F,sep = " ")
head(Data)
Data=read.csv("ExperimentalResults.csv",header = F,sep = " |,")
Data=read.csv("ExperimentalResults.csv",header = F)
head(Data)
names(Data)=c("Task","num_frames","fps","duration","return_per_episode","num_frames_per_episode")
head(Data$return_per_episode)
tail(Data$return_per_episode)
strsplit(Data$return_per_episode,split = " ")
lapply(strsplit(Data$return_per_episode,split = " "),FUN = function(x){x[1]})
as.numeric(unlist(lapply(strsplit(Data$return_per_episode,split = " "),FUN = function(x){x[1]})))
Data$Reward=as.numeric(unlist(lapply(strsplit(Data$return_per_episode,split = " "),FUN = function(x){x[1]})))
Data$num_frames=as.numeric(unlist(lapply(strsplit(Data$num_frames_per_episode,split = " "),FUN = function(x){x[1]})))
Data$Episode_length=as.numeric(unlist(lapply(strsplit(Data$num_frames_per_episode,split = " "),FUN = function(x){x[1]})))
Data=read.csv("ExperimentalResults.csv",header = F)
head(Data)
names(Data)=c("Task","num_frames","fps","duration","return_per_episode","num_frames_per_episode")
tail(Data$return_per_episode)
Data$Reward=as.numeric(unlist(lapply(strsplit(Data$return_per_episode,split = " "),FUN = function(x){x[1]})))
Data$Episode_length=as.numeric(unlist(lapply(strsplit(Data$num_frames_per_episode,split = " "),FUN = function(x){x[1]})))
head(Data$Task)
strsplit(Data$Task,split = "_")
head(Data$Task)
strsplit(Data$Task,split = "_")
lapply(strsplit(Data$Task,split = "_"),FUN = function(x){x[[1]]})
strsplit(Data$Task,split = "_")
lapply(strsplit(Data$Task,split = "_"),FUN = function(x){if(length(x)==5){return(x[3])} else {return(paste0(x[3],x[4],collapse ="_"))}})
lapply(strsplit(Data$Task,split = "_"),FUN = function(x){if(length(x)==5){return(x[3])} else {return(paste0(x[3],x[4],collapse ="[_]"))}})
Data$Method=unlist(lapply(strsplit(Data$Task,split = "_"),FUN = function(x){if(length(x)==5){return(x[3])} else {return(paste0(x[3],x[4],collapse ="[_]"))}}))
head(Data$Task)
strsplit(Data$Task,split = "_")
Data$Env=lapply(strsplit(Data$Task,split = "_"),FUN = function(x){x[1]})
unique(lapply(strsplit(Data$Task,split = "_"))
unique(Data$Env)
ggplot(data = Data, aes(x=Env, y=Reward,fill=Method)) +
geom_bar(stat="identity", position=position_dodge())+ggtitle("minigrid OOD")
Data$Reward
Data$Env
Data$Env=unlist(lapply(strsplit(Data$Task,split = "_"),FUN = function(x){x[1]}))
Data$Env
Data$Method
ggplot(data = Data, aes(x=Env, y=Reward,fill=Method)) +
geom_bar(stat="identity", position=position_dodge())+ggtitle("minigrid OOD")
ggplot(data = Data, aes(x=Method, y=Reward,fill=Method)) +
geom_bar(stat="identity", position=position_dodge())+ggtitle("minigrid OOD")
lapply(strsplit(Data$Task,split = "_"
lapply(strsplit(Data$Task,split = "_")
strsplit(Data$Task,split = "_")
Data$TrainEnv=unlist(lapply(strsplit(Data$Task,split = "_"),FUN = function(x){x[2]}))
unique(Data$TrainEnv)
VecPlot=Data[Data$TrainEnv=="MiniGrid-DLEnv-random-v0",]
ggplot(data = VecPlot, aes(x=Method, y=Reward,fill=Method)) +
geom_bar(stat="identity", position=position_dodge())+ggtitle("minigrid OOD")
Data$Reward=as.numeric(unlist(lapply(strsplit(Data$return_per_episode,split = " "),FUN = function(x){x[2]})))
Data=read.csv("ExperimentalResults.csv",header = F)
head(Data)
names(Data)=c("Task","num_frames","fps","duration","return_per_episode","num_frames_per_episode")
tail(Data$return_per_episode)
Data$Reward=as.numeric(unlist(lapply(strsplit(Data$return_per_episode,split = " "),FUN = function(x){x[2]})))
Data$Episode_length=as.numeric(unlist(lapply(strsplit(Data$num_frames_per_episode,split = " "),FUN = function(x){x[1]})))
head(Data$Task)
Data$Method=unlist(lapply(strsplit(Data$Task,split = "_"),FUN = function(x){if(length(x)==5){return(x[3])} else {return(paste0(x[3],x[4],collapse ="[_]"))}}))
Data$Env=unlist(lapply(strsplit(Data$Task,split = "_"),FUN = function(x){x[1]}))
Data$TrainEnv=unlist(lapply(strsplit(Data$Task,split = "_"),FUN = function(x){x[2]}))
unique(Data$Env)
unique(Data$TrainEnv)
VecPlot=Data[Data$TrainEnv=="MiniGrid-DLEnv-random-v0",]
ggplot(data = VecPlot, aes(x=Method, y=Reward,fill=Method)) +
geom_bar(stat="identity", position=position_dodge())+ggtitle("minigrid OOD")
ggplot(data = VecPlot, aes(x=Method, y=Reward,fill=Method)) +
geom_boxplot()+ggtitle("minigrid OOD")
Data$Reward=as.numeric(unlist(lapply(strsplit(Data$return_per_episode,split = " "),FUN = function(x){x[1]})))
ggplot(data = VecPlot, aes(x=Method, y=Reward,fill=Method)) +
geom_boxplot()+ggtitle("minigrid OOD")
######evaluation part
Data=read.csv("ExperimentalResults.csv",header = F)
head(Data)
names(Data)=c("Task","num_frames","fps","duration","return_per_episode","num_frames_per_episode")
tail(Data$return_per_episode)
Data$Reward=as.numeric(unlist(lapply(strsplit(Data$return_per_episode,split = " "),FUN = function(x){x[1]})))
Data$Episode_length=as.numeric(unlist(lapply(strsplit(Data$num_frames_per_episode,split = " "),FUN = function(x){x[1]})))
head(Data$Task)
Data$Method=unlist(lapply(strsplit(Data$Task,split = "_"),FUN = function(x){if(length(x)==5){return(x[3])} else {return(paste0(x[3],x[4],collapse ="[_]"))}}))
Data$Env=unlist(lapply(strsplit(Data$Task,split = "_"),FUN = function(x){x[1]}))
Data$TrainEnv=unlist(lapply(strsplit(Data$Task,split = "_"),FUN = function(x){x[2]}))
unique(Data$Env)
unique(Data$TrainEnv)
VecPlot=Data[Data$TrainEnv=="MiniGrid-DLEnv-random-v0",]
ggplot(data = VecPlot, aes(x=Method, y=Reward,fill=Method)) +
geom_boxplot()+ggtitle("minigrid OOD")
Data$Reward=as.numeric(unlist(lapply(strsplit(Data$return_per_episode,split = " "),FUN = function(x){x[3]})))
Data$Episode_length=as.numeric(unlist(lapply(strsplit(Data$num_frames_per_episode,split = " "),FUN = function(x){x[1]})))
head(Data$Task)
Data$Method=unlist(lapply(strsplit(Data$Task,split = "_"),FUN = function(x){if(length(x)==5){return(x[3])} else {return(paste0(x[3],x[4],collapse ="[_]"))}}))
Data$Env=unlist(lapply(strsplit(Data$Task,split = "_"),FUN = function(x){x[1]}))
Data$TrainEnv=unlist(lapply(strsplit(Data$Task,split = "_"),FUN = function(x){x[2]}))
unique(Data$Env)
unique(Data$TrainEnv)
VecPlot=Data[Data$TrainEnv=="MiniGrid-DLEnv-random-v0",]
ggplot(data = VecPlot, aes(x=Method, y=Reward,fill=Method)) +
geom_boxplot()+ggtitle("minigrid OOD")
names(Data)=c("Task","num_frames","fps","duration","return_per_episode","num_frames_per_episode")
tail(Data$return_per_episode)
Data$Reward=as.numeric(unlist(lapply(strsplit(Data$return_per_episode,split = " "),FUN = function(x){x[4]})))
Data$Episode_length=as.numeric(unlist(lapply(strsplit(Data$num_frames_per_episode,split = " "),FUN = function(x){x[1]})))
head(Data$Task)
Data$Method=unlist(lapply(strsplit(Data$Task,split = "_"),FUN = function(x){if(length(x)==5){return(x[3])} else {return(paste0(x[3],x[4],collapse ="[_]"))}}))
Data$Env=unlist(lapply(strsplit(Data$Task,split = "_"),FUN = function(x){x[1]}))
Data$TrainEnv=unlist(lapply(strsplit(Data$Task,split = "_"),FUN = function(x){x[2]}))
unique(Data$Env)
unique(Data$TrainEnv)
VecPlot=Data[Data$TrainEnv=="MiniGrid-DLEnv-random-v0",]
ggplot(data = VecPlot, aes(x=Method, y=Reward,fill=Method)) +
geom_boxplot()+ggtitle("minigrid OOD")
Data$Reward=as.numeric(unlist(lapply(strsplit(Data$return_per_episode,split = " "),FUN = function(x){x[1]})))
Data$Episode_length=as.numeric(unlist(lapply(strsplit(Data$num_frames_per_episode,split = " "),FUN = function(x){x[1]})))
head(Data$Task)
Data$Method=unlist(lapply(strsplit(Data$Task,split = "_"),FUN = function(x){if(length(x)==5){return(x[3])} else {return(paste0(x[3],x[4],collapse ="[_]"))}}))
Data$Env=unlist(lapply(strsplit(Data$Task,split = "_"),FUN = function(x){x[1]}))
Data$TrainEnv=unlist(lapply(strsplit(Data$Task,split = "_"),FUN = function(x){x[2]}))
unique(Data$Env)
unique(Data$TrainEnv)
VecPlot=Data[Data$TrainEnv=="MiniGrid-DLEnv-random-v0",]
ggplot(data = VecPlot, aes(x=Method, y=Reward,fill=Method)) +
geom_boxplot()+ggtitle("minigrid OOD")
ggplot(data = VecPlot, aes(x=Method, y=Episode_length,fill=Method)) +
geom_boxplot()+ggtitle("minigrid OOD")
ggplot(data = VecPlot, aes(x=Method, y=log(Episode_length+1.1),fill=Method)) +
geom_boxplot()+ggtitle("minigrid OOD")
ggplot(data = VecPlot, aes(x=Method, y=Episode_length,fill=Method)) +
geom_boxplot()+ggtitle("minigrid OOD")
ggplot(data = VecPlot, aes(x=Method, y=Reward,fill=Method)) +
geom_boxplot()+ggtitle("minigrid OOD")
ggplot(data = VecPlot, aes(x=Method, y=Reward,fill=Method)) +
geom_violin()+ggtitle("minigrid OOD")
ggplot(data = VecPlot, aes(x=Method, y=Reward,fill=Method)) +
geom_boxplot()+ggtitle("minigrid OOD")
unique(Data$Env)
VecPlot=Data[(Data$TrainEnv=="MiniGrid-DLEnv-random-v0")&(!grepl(Data$Env,pattern = "DL")),]
ggplot(data = VecPlot, aes(x=Method, y=Reward,fill=Method)) +
geom_boxplot()+ggtitle("minigrid OOD")
VecPlot=Data[(Data$TrainEnv=="MiniGrid-DLEnv-random-v0")&(grepl(Data$Env,pattern == "DL")),]
ggplot(data = VecPlot, aes(x=Method, y=Reward,fill=Method)) +
geom_boxplot()+ggtitle("minigrid OOD")
ggplot(data = VecPlot, aes(x=Method, y=Reward,fill=Method)) +
geom_boxplot()+ggtitle("minigrid OOD")+geom_violin()
unique(Data$Env)
VecPlot=Data[(Data$TrainEnv=="MiniGrid-DLEnv-random-v0")&(grepl(Data$Env,pattern == "DoorKey")),]
ggplot(data = VecPlot, aes(x=Method, y=Reward,fill=Method)) +
geom_boxplot()+ggtitle("minigrid OOD")
unique(Data$Env)
VecPlot=Data[(Data$TrainEnv=="MiniGrid-DLEnv-random-v0")&(grepl(Data$Env,pattern == "DoorKey")),]
unique(Data$Env)
VecPlot=Data[(Data$TrainEnv=="MiniGrid-DLEnv-random-v0")&(grepl(Data$Env,pattern = "Room")),]
ggplot(data = VecPlot, aes(x=Method, y=Reward,fill=Method)) +
geom_boxplot()+ggtitle("minigrid OOD")
VecPlot=Data[(Data$TrainEnv=="MiniGrid-DLEnv-random-v0"),]
ggplot(data = VecPlot, aes(x=Method, y=Reward,fill=Method)) +
geom_boxplot()+ggtitle("minigrid OOD")+geom_violin()
ggplot(data = VecPlot, aes(x=Method, y=Reward,fill=Method)) +
geom_boxplot()+ggtitle("minigrid OOD")
ggsave(filename = paste0("Images/",Task,"_OODEvalReward.png"),height = 7,width = 11)
ggsave(filename = paste0("Images/",Task,"_OODEvalReward.png"),height = 7,width = 11)
AllDirs=list.files("./")
AllDirs=AllDirs[grepl(AllDirs,pattern = "Exp")]
setwd("C:/Users/kaiyu/Google Drive/research/MILA/BlockTransformer/shared_workspace/sort_of_clevr")
AllDirs=list.files("./")
AllDirs=AllDirs[grepl(AllDirs,pattern = "Exp")]
Data=NULL
for( DIR in AllDirs){
vec=read.csv(paste0(DIR,"/",list.files(DIR)[1]),header = F)
vec$Method=strsplit(DIR,split = "-")[[1]][4]
Data=rbind(Data,vec)
}
head(Data)
names(Data)=c("epoch", "train_acc_ternary",
"train_acc_binary",
"train_acc_unary",
"test_acc_ternary",
"test_acc_binary",
"test_acc_unary","Method")
ggplot(data = Data, aes(x=epoch, y=test_acc_ternary)) +
geom_smooth(size=2)
ggplot(data = Data, aes(x=epoch, y=test_acc_ternary,linetype=Method,colour=Method)) +
geom_smooth(size=2)
library(ggplot2)
#
# Block1=read.csv('block1.csv',header = F)
# head(Block1)
# Block1$Method="Block"
# Block1$seed=1
#
# Block2=read.csv('block2.csv',header = F)
# head(Block2)
# Block2$Method="Block"
# Block2$seed=2
#
# Block3=read.csv('block3.csv',header = F)
# Block3$Method="Block"
# head(Block3)
# Block3$seed=3
#
# Vanilla1=read.csv('vanilla1.csv',header = F)
# head(Vanilla1)
# Vanilla1$Method="Vanilla"
# Vanilla1$seed=1
#
# Vanilla2=read.csv('vanilla2.csv',header = F)
#
#
# Vanilla2$Method="Vanilla"
# Vanilla2$seed=2
#
# Vanilla3=read.csv('vanilla3.csv',header = F)
#
# Vanilla3$Method="Vanilla"
# Vanilla3$seed=3
#
#
#
# Data=rbind(Block1,Block2,Block3,Vanilla1,Vanilla2,Vanilla3)
# head(Data)
#Data=Data[,c(3,8,12,16,17,18)]
#names(Data)=c("Episode","Ternary_accuracy","Relations_accuracy","Non_relations_accuracy","Method","seed")
AllDirs=list.files("./")
AllDirs=AllDirs[grepl(AllDirs,pattern = "Exp")]
Data=NULL
for( DIR in AllDirs){
vec=read.csv(paste0(DIR,"/",list.files(DIR)[1]),header = F)
vec$Method=strsplit(DIR,split = "-")[[1]][4]
Data=rbind(Data,vec)
}
head(Data)
names(Data)=c("epoch", "train_acc_ternary",
"train_acc_binary",
"train_acc_unary",
"test_acc_ternary",
"test_acc_binary",
"test_acc_unary","Method")
#
# Data$Ternary_accuracy=as.numeric(sub("%", "", Data$Ternary_accuracy))
# Data$Relations_accuracy=as.numeric(sub("%", "", Data$Relations_accuracy))
# Data$Non_relations_accuracy=as.numeric(sub("%", "", Data$Non_relations_accuracy))
#
# Data=Data[!is.na(Data$Ternary_accuracy),]
# unique(Data$Ternary_accuracy)
# Data$Episode=as.numeric(Data$Episode)
# head(Data)
ggplot(data = Data, aes(x=epoch, y=test_acc_ternary)) +
geom_smooth(size=2)
ggplot(data = Data, aes(x=epoch, y=test_acc_ternary,linetype=Method,colour=Method)) +
geom_smooth(size=2)
ggplot(data = Data, aes(x=epoch, y=test_acc_ternary,linetype=Method,colour=Method)) +
geom_line(size=2)
ggplot(data = Data, aes(x=epoch, y=test_acc_ternary,linetype=Method,colour=Method)) +
geom_smooth(size=2)
ggplot(data = Data, aes(x=epoch, y=test_acc_ternary,linetype=Method,colour=Method)) +
geom_smooth(size=2)+xlim(0,20)
#organize data and plot
library(ggplot2)
#
# Block1=read.csv('block1.csv',header = F)
# head(Block1)
# Block1$Method="Block"
# Block1$seed=1
#
# Block2=read.csv('block2.csv',header = F)
# head(Block2)
# Block2$Method="Block"
# Block2$seed=2
#
# Block3=read.csv('block3.csv',header = F)
# Block3$Method="Block"
# head(Block3)
# Block3$seed=3
#
# Vanilla1=read.csv('vanilla1.csv',header = F)
# head(Vanilla1)
# Vanilla1$Method="Vanilla"
# Vanilla1$seed=1
#
# Vanilla2=read.csv('vanilla2.csv',header = F)
#
#
# Vanilla2$Method="Vanilla"
# Vanilla2$seed=2
#
# Vanilla3=read.csv('vanilla3.csv',header = F)
#
# Vanilla3$Method="Vanilla"
# Vanilla3$seed=3
#
#
#
# Data=rbind(Block1,Block2,Block3,Vanilla1,Vanilla2,Vanilla3)
# head(Data)
#Data=Data[,c(3,8,12,16,17,18)]
#names(Data)=c("Episode","Ternary_accuracy","Relations_accuracy","Non_relations_accuracy","Method","seed")
AllDirs=list.files("./")
AllDirs=AllDirs[grepl(AllDirs,pattern = "Exp")]
Data=NULL
for( DIR in AllDirs){
vec=read.csv(paste0(DIR,"/",list.files(DIR)[1]),header = F)
vec$Method=strsplit(DIR,split = "-")[[1]][4]
Data=rbind(Data,vec)
}
head(Data)
names(Data)=c("epoch", "train_acc_ternary",
"train_acc_binary",
"train_acc_unary",
"test_acc_ternary",
"test_acc_binary",
"test_acc_unary","Method")
#
# Data$Ternary_accuracy=as.numeric(sub("%", "", Data$Ternary_accuracy))
# Data$Relations_accuracy=as.numeric(sub("%", "", Data$Relations_accuracy))
# Data$Non_relations_accuracy=as.numeric(sub("%", "", Data$Non_relations_accuracy))
#
# Data=Data[!is.na(Data$Ternary_accuracy),]
# unique(Data$Ternary_accuracy)
# Data$Episode=as.numeric(Data$Episode)
# head(Data)
ggplot(data = Data, aes(x=epoch, y=test_acc_ternary)) +
geom_smooth(size=2)
ggplot(data = Data, aes(x=epoch, y=test_acc_ternary,linetype=Method,colour=Method)) +
geom_smooth(size=2)
ggplot(data = Data, aes(x=epoch, y=test_acc_ternary,linetype=Method,colour=Method)) +
geom_smooth(size=2)+xlim(0,20)
#organize data and plot
library(ggplot2)
#
# Block1=read.csv('block1.csv',header = F)
# head(Block1)
# Block1$Method="Block"
# Block1$seed=1
#
# Block2=read.csv('block2.csv',header = F)
# head(Block2)
# Block2$Method="Block"
# Block2$seed=2
#
# Block3=read.csv('block3.csv',header = F)
# Block3$Method="Block"
# head(Block3)
# Block3$seed=3
#
# Vanilla1=read.csv('vanilla1.csv',header = F)
# head(Vanilla1)
# Vanilla1$Method="Vanilla"
# Vanilla1$seed=1
#
# Vanilla2=read.csv('vanilla2.csv',header = F)
#
#
# Vanilla2$Method="Vanilla"
# Vanilla2$seed=2
#
# Vanilla3=read.csv('vanilla3.csv',header = F)
#
# Vanilla3$Method="Vanilla"
# Vanilla3$seed=3
#
#
#
# Data=rbind(Block1,Block2,Block3,Vanilla1,Vanilla2,Vanilla3)
# head(Data)
#Data=Data[,c(3,8,12,16,17,18)]
#names(Data)=c("Episode","Ternary_accuracy","Relations_accuracy","Non_relations_accuracy","Method","seed")
AllDirs=list.files("./")
AllDirs=AllDirs[grepl(AllDirs,pattern = "Exp")]
Data=NULL
for( DIR in AllDirs){
vec=read.csv(paste0(DIR,"/",list.files(DIR)[1]),header = F)
vec$Method=strsplit(DIR,split = "-")[[1]][4]
Data=rbind(Data,vec)
}
head(Data)
names(Data)=c("epoch", "train_acc_ternary",
"train_acc_binary",
"train_acc_unary",
"test_acc_ternary",
"test_acc_binary",
"test_acc_unary","Method")
#
# Data$Ternary_accuracy=as.numeric(sub("%", "", Data$Ternary_accuracy))
# Data$Relations_accuracy=as.numeric(sub("%", "", Data$Relations_accuracy))
# Data$Non_relations_accuracy=as.numeric(sub("%", "", Data$Non_relations_accuracy))
#
# Data=Data[!is.na(Data$Ternary_accuracy),]
# unique(Data$Ternary_accuracy)
# Data$Episode=as.numeric(Data$Episode)
# head(Data)
ggplot(data = Data, aes(x=epoch, y=test_acc_ternary)) +
geom_smooth(size=2)
ggplot(data = Data, aes(x=epoch, y=test_acc_ternary,linetype=Method,colour=Method)) +
geom_smooth(size=2)
